hello
this is demo txt
some changes for stash
practice for stash

// Memozitation
// let cache={};
// function memoZitation(){
//     return function(n){
//         if(n in cache){
//             return cache[n]
//         }else{
//             console.log(`Long time`);
//             cache[n]=n+80
//             return cache[n]
//         }
//     }
// }

# app.py
import pygame
from screen import GameScreen
from player import Player

# Initialize pygame
pygame.init()

# Game window dimensions
SCREEN_WIDTH = 400
SCREEN_HEIGHT = 600

# Create GameScreen instance
game_screen = GameScreen(SCREEN_WIDTH, SCREEN_HEIGHT, 'Jumpy')

# Load images after initializing pygame
jumpy_image = pygame.image.load('assets/jump.png').convert_alpha()
bg_image = pygame.image.load('assets/bg.png').convert_alpha()

# Define colours
WHITE = (255, 255, 255)

# Create Player instance
jumpy = Player(SCREEN_WIDTH // 2, SCREEN_HEIGHT - 150)

# Game loop
run = True
while run:
    # Draw background
    game_screen.get_surface().blit(bg_image, (0, 0))

    # Draw sprites
    jumpy.draw(game_screen.get_surface())

    # Event handler
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False

    # Update display window
    game_screen.update_display()

# Quit pygame
pygame.quit()


# player 
# player.py
import pygame

WHITE = (255, 255, 255)

class Player():
    def __init__(self, x:int, y:int):
        # Load image after initializing pygame
        self.image = pygame.transform.scale(pygame.image.load('assets/jump.png').convert_alpha(), (45, 45))
        self.width = 25
        self.height = 40
        self.rect = pygame.Rect(0, 0, self.width, self.height)
        self.rect.center = (x, y)

    def draw(self, screen:str):
        screen.blit(self.image, (self.rect.x - 12, self.rect.y - 5))
        pygame.draw.rect(screen, WHITE, self.rect, 2)

# Screen
# screen.py
import pygame

class GameScreen():
    def __init__(self, width:int, height:int, caption:str):
        self.screen = pygame.display.set_mode((width, height))
        pygame.display.set_caption(caption)

    def update_display(self:object):
        pygame.display.update()

    def get_surface(self:object)->str:
        return self.screen

